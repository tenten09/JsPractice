==============================
命名規則
ok         
英数字 $ _          

NG
let my-name
let 0price
===================================
let price = 500
price = pricee + 100
price += 100;
===================================
const signal = 'pink';

// if (signal === 'red') {
//   console.log('stop!');
// } else if (signal === 'yellow') {
//   console.log('caution');
// } else if (signal === 'blue') {
//   console.log('go');
// }

switch (signal) {
  case 'red':
    console.log('stop');
    break;
    case 'yellow':
    console.log('caution');
    break;
    case 'blue':
    case 'green':
    console.log('go');
    break;
    default:
      console.log('wrong signal');
      break;
}
=============================================
for (let i = 1; i <= 10; i++) {
  console.log(`hello ${i}`);
}
=============================================

let hp = -50

 do  {
  console.log(`${hp} HP left`);
  hp -= 15;
} while (hp > 0)

================================
const double = a => a * 2;
console.log(double(13))
=================================
for (let i = 0; i < scores.length; i++) {
    console.log(`Score ${i}: ${scores[i]}`);
  }
===================================
shift 先頭削除
push 要素追加（末尾）
====================================
splice
要素を削除追加（先頭末尾以外）
（開始位置、削除する数、追加するもの）
=====================================
スプレッド構文
...otherScores
配列の中に配列を入れる場合
関数の引数にも用いられる
=====================================
配列の各要素に何かを追加する
.map
======================================
条件設定
.filter
====================================
